<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite8</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>4</depth>
  <persistent>0</persistent>
  <parentName>shootables</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>host = -1
capture = 0
saved = 0
falldeath = 0
viewon = 0
hp = 1
fallspeed = 0.01
see = choose(0,1)
walkdelay = 0
stop = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var changesee = choose(0,0,0,1)
if changesee = 1 {
if see = 0 see = 1
else see = 0
}
if see = 0 x += 2
if see = 1 x -= 2
walkdelay = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp = 0 {
global.humanoidnumber += -1
instance_create(x,y,object_humanoiddead)
sound_stop(sound_humanoiddead) sound_play(sound_humanoiddead)
instance_destroy();
}

if capture = 1 and instance_exists(host) {
x = host.x+1
y = host.y+14
}

if x&gt;room_width
x-=room_width
if x&lt;0
x+=room_width

if see = 0 image_xscale = 1
if see = 1 image_xscale = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewon = 0
for(var i=-1;i&lt;2;i++) {
if x-room_width*i &gt; view_xview-sprite_width/2 and x-room_width*i &lt; view_xview+960+sprite_width/2
{viewon = 1}
}

if capture = 1 {
if !instance_exists(host) {host = -1 capture = 0 stop = 0 saved = 1}
}
if capture = 0 {
if saved = 0 {
if instance_exists(object0) and object0.dying = 0 and walkdelay = 0 and stop = 0 {walkdelay = 1 alarm[0] = 10+random(40)}
if stop = 1 or object0.dying &gt; 0 {walkdelay = 0 alarm[0] = 0}
}
if saved = 1 {
if y &lt; 170 and falldeath = 0 {if instance_exists(object0) and object0.dying = 0 {falldeath = 1}}
if y &gt;= 230 {
if falldeath = 1 {
global.humanoidnumber += -1
instance_create(x,y,object_humanoiddead)
sound_stop(sound_humanoiddead) sound_play(sound_humanoiddead)
instance_destroy();
}
else {saved = 0 y = 230
var sab = instance_create(x,y-50,object_lowerbonus)
with(sab) {if instance_exists(object0) {motion_add(0,object0.hspeed)}}
sound_stop(sound_bonus) sound_play(sound_bonus)
}
}
else {
if instance_exists(object0) and object0.dying = 0
vspeed += fallspeed
if instance_place(x,y,object0) or instance_place(x-room_width,y,object0) or instance_place(x+room_width,y,object0) {object0.savenum += 1

var sab = instance_create(object0.x,object0.y-30,object_savebonus)
with(sab) {motion_add(0,object0.hspeed)}
sound_stop(sound_bonus) sound_play(sound_bonus)
var sa = instance_create(x,y,object_humanoid_saved) with(sa) {capposition = object0.savenum} instance_destroy();}
}
}
}
if saved = 1
if vspeed &gt; 8 vspeed = 8
if saved = 0
vspeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i=-1;i&lt;2;i++) {
draw_sprite_ext(sprite_index,0,x+room_width*i,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
